<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_countyoutflow' inline='true' name='federated.1m18pbv0zka7eq1bh405x19kifr4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_countyoutflow' name='textscan.1ha09iq1djnshf1ezanxh1sx5pni'>
            <connection class='textscan' directory='C:/Users/User/Documents/DVA/Project/USE THIS DATA' filename='cleaned_countyoutflow.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ha09iq1djnshf1ezanxh1sx5pni' name='cleaned_countyoutflow.csv' table='[cleaned_countyoutflow#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='year' ordinal='0' />
            <column datatype='integer' name='origin_state_fips' ordinal='1' />
            <column datatype='integer' name='origin_county_fips' ordinal='2' />
            <column datatype='integer' name='destination_state_fips' ordinal='3' />
            <column datatype='integer' name='destination_county_fips' ordinal='4' />
            <column datatype='integer' name='y1fips' ordinal='5' />
            <column datatype='integer' name='y2fips' ordinal='6' />
            <column datatype='string' name='y2_state' ordinal='7' />
            <column datatype='string' name='y2_countyname' ordinal='8' />
            <column datatype='integer' name='num_returns' ordinal='9' />
            <column datatype='integer' name='num_individuals' ordinal='10' />
            <column datatype='integer' name='adjusted_gross_income' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ha09iq1djnshf1ezanxh1sx5pni' name='cleaned_countyoutflow.csv' table='[cleaned_countyoutflow#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='year' ordinal='0' />
            <column datatype='integer' name='origin_state_fips' ordinal='1' />
            <column datatype='integer' name='origin_county_fips' ordinal='2' />
            <column datatype='integer' name='destination_state_fips' ordinal='3' />
            <column datatype='integer' name='destination_county_fips' ordinal='4' />
            <column datatype='integer' name='y1fips' ordinal='5' />
            <column datatype='integer' name='y2fips' ordinal='6' />
            <column datatype='string' name='y2_state' ordinal='7' />
            <column datatype='string' name='y2_countyname' ordinal='8' />
            <column datatype='integer' name='num_returns' ordinal='9' />
            <column datatype='integer' name='num_individuals' ordinal='10' />
            <column datatype='integer' name='adjusted_gross_income' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_state_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[origin_state_fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>origin_state_fips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[origin_county_fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>origin_county_fips</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_state_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[destination_state_fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>destination_state_fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_county_fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[destination_county_fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>destination_county_fips</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y1fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[y1fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>y1fips</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y2fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[y2fips]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>y2fips</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y2_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[y2_state]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>y2_state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>y2_countyname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[y2_countyname]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>y2_countyname</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_returns</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_returns]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>num_returns</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_individuals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_individuals]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>num_individuals</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adjusted_gross_income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[adjusted_gross_income]</local-name>
            <parent-name>[cleaned_countyoutflow.csv]</parent-name>
            <remote-alias>adjusted_gross_income</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Origin FIPS' datatype='string' name='[Calculation_426716079420530698]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y1fips]),5)' />
      </column>
      <column caption='Destination FIPS' datatype='string' name='[Calculation_426716079420825611]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y2fips]),5)' />
      </column>
      <column caption='IRS Year' datatype='string' name='[Calculation_426716079425789964]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [year] = &apos;16-17&apos; THEN &apos;2017&apos;&#13;&#10;ELSEIF [year] = &apos;17-18&apos; THEN &apos;2018&apos;&#13;&#10;ELSEIF [year] = &apos;18-19&apos; THEN &apos;2019&apos;&#13;&#10;ELSEIF [year] = &apos;19-20&apos; THEN &apos;2020&apos;&#13;&#10;ELSEIF [year] = &apos;20-21&apos; THEN &apos;2021&apos;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_countyoutflow.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232]' role='measure' type='quantitative' />
      <column caption='Adjusted Gross Income' datatype='integer' name='[adjusted_gross_income]' role='measure' type='quantitative' />
      <column caption='Destination County Fips' datatype='integer' name='[destination_county_fips]' role='measure' type='quantitative' />
      <column caption='Destination State Fips' datatype='integer' name='[destination_state_fips]' role='measure' type='quantitative' />
      <column caption='Num Individuals' datatype='integer' name='[num_individuals]' role='measure' type='quantitative' />
      <column caption='Num Returns' datatype='integer' name='[num_returns]' role='measure' type='quantitative' />
      <column caption='Origin County Fips' datatype='integer' name='[origin_county_fips]' role='measure' type='quantitative' />
      <column caption='Origin State Fips' datatype='integer' name='[origin_state_fips]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Y1Fips' datatype='integer' name='[y1fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal' />
      <column caption='Y2 Countyname' datatype='string' name='[y2_countyname]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Y2 State' datatype='string' name='[y2_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Y2Fips' datatype='integer' name='[y2fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal' />
      <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
      <drill-paths>
        <drill-path name='y2_state, y2_countyname'>
          <field>[y2_state]</field>
          <field>[y2_countyname]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='Calculation_426716079425789964' />
        <field-sort-custom-order field='origin_state_fips' />
        <field-sort-custom-order field='origin_county_fips' />
        <field-sort-custom-order field='destination_state_fips' />
        <field-sort-custom-order field='destination_county_fips' />
        <field-sort-custom-order field='y1fips' />
        <field-sort-custom-order field='Calculation_426716079420530698' />
        <field-sort-custom-order field='y2fips' />
        <field-sort-custom-order field='Calculation_426716079420825611' />
        <field-sort-custom-order field='y2_state' />
        <field-sort-custom-order field='y2_countyname' />
        <field-sort-custom-order field='num_returns' />
        <field-sort-custom-order field='num_individuals' />
        <field-sort-custom-order field='adjusted_gross_income' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_countyoutflow.csv' id='cleaned_countyoutflow.csv_7DC5802FE6EE4AA6BC70346854A74232'>
            <properties context=''>
              <relation connection='textscan.1ha09iq1djnshf1ezanxh1sx5pni' name='cleaned_countyoutflow.csv' table='[cleaned_countyoutflow#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='year' ordinal='0' />
                  <column datatype='integer' name='origin_state_fips' ordinal='1' />
                  <column datatype='integer' name='origin_county_fips' ordinal='2' />
                  <column datatype='integer' name='destination_state_fips' ordinal='3' />
                  <column datatype='integer' name='destination_county_fips' ordinal='4' />
                  <column datatype='integer' name='y1fips' ordinal='5' />
                  <column datatype='integer' name='y2fips' ordinal='6' />
                  <column datatype='string' name='y2_state' ordinal='7' />
                  <column datatype='string' name='y2_countyname' ordinal='8' />
                  <column datatype='integer' name='num_returns' ordinal='9' />
                  <column datatype='integer' name='num_individuals' ordinal='10' />
                  <column datatype='integer' name='adjusted_gross_income' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='kmeans_model_data_v1' inline='true' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='kmeans_model_data_v1' name='textscan.1b1onnb0u7arbe1b9ysdw196v70j'>
            <connection class='textscan' directory='C:/Users/User/Documents/DVA/Project' filename='kmeans_model_data_v1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1b1onnb0u7arbe1b9ysdw196v70j' name='kmeans_model_data_v1.csv' table='[kmeans_model_data_v1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='FIPS' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='County' ordinal='3' />
            <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
            <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
            <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
            <column datatype='real' name='Smoke_Perc' ordinal='7' />
            <column datatype='real' name='Obese_Perc' ordinal='8' />
            <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
            <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
            <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
            <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
            <column datatype='real' name='Some_Association_Rate' ordinal='13' />
            <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
            <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
            <column datatype='integer' name='Population' ordinal='16' />
            <column datatype='real' name='Zillow_Value' ordinal='17' />
            <column datatype='integer' name='cluster' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1b1onnb0u7arbe1b9ysdw196v70j' name='kmeans_model_data_v1.csv' table='[kmeans_model_data_v1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Year' ordinal='0' />
            <column datatype='integer' name='FIPS' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='County' ordinal='3' />
            <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
            <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
            <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
            <column datatype='real' name='Smoke_Perc' ordinal='7' />
            <column datatype='real' name='Obese_Perc' ordinal='8' />
            <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
            <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
            <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
            <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
            <column datatype='real' name='Some_Association_Rate' ordinal='13' />
            <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
            <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
            <column datatype='integer' name='Population' ordinal='16' />
            <column datatype='real' name='Zillow_Value' ordinal='17' />
            <column datatype='integer' name='cluster' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fair_Poor_Health_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fair_Poor_Health_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Fair_Poor_Health_Perc</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phys_Unhealth_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phys_Unhealth_Days]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Phys_Unhealth_Days</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ment_Unhealth_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ment_Unhealth_Days]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Ment_Unhealth_Days</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoke_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoke_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Smoke_Perc</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obese_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obese_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Obese_Perc</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phys_Inac_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phys_Inac_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Phys_Inac_Perc</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess_Drink_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Excess_Drink_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Excess_Drink_Perc</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_College_Perc_25_44</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Some_College_Perc_25_44]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Some_College_Perc_25_44</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_Association_Per_10K</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Some_Association_Per_10K]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Some_Association_Per_10K</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_Association_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Some_Association_Rate]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Some_Association_Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe_Housing_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe_Housing_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Severe_Housing_Perc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insufficent_Sleep_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Insufficent_Sleep_Perc]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Insufficent_Sleep_Perc</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zillow_Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Zillow_Value]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>Zillow_Value</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[kmeans_model_data_v1.csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KMeans FIPS' datatype='string' name='[Calculation_1001487982148100096]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Excess Drink Perc' datatype='real' name='[Excess_Drink_Perc]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Fair Poor Health Perc' datatype='real' name='[Fair_Poor_Health_Perc]' role='measure' type='quantitative' />
      <column caption='Insufficent Sleep Perc' datatype='real' name='[Insufficent_Sleep_Perc]' role='measure' type='quantitative' />
      <column caption='Ment Unhealth Days' datatype='real' name='[Ment_Unhealth_Days]' role='measure' type='quantitative' />
      <column caption='Obese Perc' datatype='real' name='[Obese_Perc]' role='measure' type='quantitative' />
      <column caption='Phys Inac Perc' datatype='real' name='[Phys_Inac_Perc]' role='measure' type='quantitative' />
      <column caption='Phys Unhealth Days' datatype='real' name='[Phys_Unhealth_Days]' role='measure' type='quantitative' />
      <column caption='Severe Housing Perc' datatype='real' name='[Severe_Housing_Perc]' role='measure' type='quantitative' />
      <column caption='Smoke Perc' datatype='real' name='[Smoke_Perc]' role='measure' type='quantitative' />
      <column caption='Some Association Per 10K' datatype='integer' name='[Some_Association_Per_10K]' role='measure' type='quantitative' />
      <column caption='Some Association Rate' datatype='real' name='[Some_Association_Rate]' role='measure' type='quantitative' />
      <column caption='Some College Perc 25 44' datatype='real' name='[Some_College_Perc_25_44]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='kmeans_model_data_v1.csv' datatype='table' name='[__tableau_internal_object_id__].[kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
      <column-instance column='[cluster]' derivation='None' name='[none:cluster:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:cluster:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#499894'>
              <bucket>27</bucket>
            </map>
            <map to='#499894'>
              <bucket>47</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#499894'>
              <bucket>87</bucket>
            </map>
            <map to='#499894'>
              <bucket>107</bucket>
            </map>
            <map to='#499894'>
              <bucket>127</bucket>
            </map>
            <map to='#499894'>
              <bucket>147</bucket>
            </map>
            <map to='#499894'>
              <bucket>167</bucket>
            </map>
            <map to='#499894'>
              <bucket>187</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>19</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>39</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>79</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>99</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>119</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>139</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>159</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>179</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>199</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>23</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>43</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>63</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>83</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>103</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>123</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>143</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>163</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>183</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#79706e'>
              <bucket>31</bucket>
            </map>
            <map to='#79706e'>
              <bucket>51</bucket>
            </map>
            <map to='#79706e'>
              <bucket>71</bucket>
            </map>
            <map to='#79706e'>
              <bucket>91</bucket>
            </map>
            <map to='#79706e'>
              <bucket>111</bucket>
            </map>
            <map to='#79706e'>
              <bucket>131</bucket>
            </map>
            <map to='#79706e'>
              <bucket>151</bucket>
            </map>
            <map to='#79706e'>
              <bucket>171</bucket>
            </map>
            <map to='#79706e'>
              <bucket>191</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>28</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>48</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>68</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>88</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>108</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>128</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>148</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>168</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>188</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>24</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>64</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>84</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>104</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>124</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>144</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>164</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>184</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>17</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>37</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>57</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>77</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>97</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>117</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>137</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>157</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>177</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>197</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>20</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>40</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>60</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>80</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>100</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>120</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>140</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>160</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>180</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>15</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>35</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>55</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>75</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>95</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>115</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>135</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>155</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>175</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>195</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>25</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>65</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>85</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>105</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>125</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>145</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>165</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>185</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>32</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>52</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>72</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>92</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>112</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>132</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>152</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>172</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>192</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>33</bucket>
            </map>
            <map to='#d37295'>
              <bucket>53</bucket>
            </map>
            <map to='#d37295'>
              <bucket>73</bucket>
            </map>
            <map to='#d37295'>
              <bucket>93</bucket>
            </map>
            <map to='#d37295'>
              <bucket>113</bucket>
            </map>
            <map to='#d37295'>
              <bucket>133</bucket>
            </map>
            <map to='#d37295'>
              <bucket>153</bucket>
            </map>
            <map to='#d37295'>
              <bucket>173</bucket>
            </map>
            <map to='#d37295'>
              <bucket>193</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>16</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>36</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>56</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>76</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>96</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>116</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>136</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>156</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>176</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>196</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>38</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>58</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>78</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>98</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>118</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>138</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>158</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>178</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>198</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#e15759'>
              <bucket>29</bucket>
            </map>
            <map to='#e15759'>
              <bucket>49</bucket>
            </map>
            <map to='#e15759'>
              <bucket>69</bucket>
            </map>
            <map to='#e15759'>
              <bucket>89</bucket>
            </map>
            <map to='#e15759'>
              <bucket>109</bucket>
            </map>
            <map to='#e15759'>
              <bucket>129</bucket>
            </map>
            <map to='#e15759'>
              <bucket>149</bucket>
            </map>
            <map to='#e15759'>
              <bucket>169</bucket>
            </map>
            <map to='#e15759'>
              <bucket>189</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>26</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>66</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>86</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>106</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>126</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>146</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>166</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>186</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>21</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>41</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>81</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>101</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>121</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>141</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>161</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>181</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>34</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>54</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>74</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>94</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>114</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>134</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>154</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>174</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>194</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>30</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>50</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>70</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>90</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>110</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>130</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>150</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>170</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>190</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>22</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>42</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>62</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>82</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>102</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>122</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>142</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>162</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>182</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='FIPS' />
        <field-sort-custom-order field='Calculation_1001487982148100096' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='Fair_Poor_Health_Perc' />
        <field-sort-custom-order field='Phys_Unhealth_Days' />
        <field-sort-custom-order field='Ment_Unhealth_Days' />
        <field-sort-custom-order field='Smoke_Perc' />
        <field-sort-custom-order field='Obese_Perc' />
        <field-sort-custom-order field='Phys_Inac_Perc' />
        <field-sort-custom-order field='Excess_Drink_Perc' />
        <field-sort-custom-order field='Some_College_Perc_25_44' />
        <field-sort-custom-order field='Some_Association_Per_10K' />
        <field-sort-custom-order field='Some_Association_Rate' />
        <field-sort-custom-order field='Severe_Housing_Perc' />
        <field-sort-custom-order field='Insufficent_Sleep_Perc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Zillow_Value' />
        <field-sort-custom-order field='cluster' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='kmeans_model_data_v1.csv' id='kmeans_model_data_v1.csv_A266A840171241FB8A2BB93E97B31DE1'>
            <properties context=''>
              <relation connection='textscan.1b1onnb0u7arbe1b9ysdw196v70j' name='kmeans_model_data_v1.csv' table='[kmeans_model_data_v1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='FIPS' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='County' ordinal='3' />
                  <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
                  <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
                  <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
                  <column datatype='real' name='Smoke_Perc' ordinal='7' />
                  <column datatype='real' name='Obese_Perc' ordinal='8' />
                  <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
                  <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
                  <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
                  <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
                  <column datatype='real' name='Some_Association_Rate' ordinal='13' />
                  <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
                  <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
                  <column datatype='integer' name='Population' ordinal='16' />
                  <column datatype='real' name='Zillow_Value' ordinal='17' />
                  <column datatype='integer' name='cluster' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Health And Zillow Population Fixed' inline='true' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Agony - Health And Zillow Population Fixed' name='textscan.0grs3cc07ouixk1ex4ym50vbz7vg'>
            <connection class='textscan' directory='C:/Users/User/Documents/DVA/Project' filename='Agony - Health And Zillow Population Fixed.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0grs3cc07ouixk1ex4ym50vbz7vg' name='Agony - Health And Zillow Population Fixed.csv' table='[Agony - Health And Zillow Population Fixed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='FIPS' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='County' ordinal='3' />
            <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
            <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
            <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
            <column datatype='real' name='Smoke_Perc' ordinal='7' />
            <column datatype='real' name='Obese_Perc' ordinal='8' />
            <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
            <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
            <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
            <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
            <column datatype='real' name='Some_Association_Rate' ordinal='13' />
            <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
            <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
            <column datatype='integer' name='Population' ordinal='16' />
            <column datatype='real' name='Zillow_Value' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0grs3cc07ouixk1ex4ym50vbz7vg' name='Agony - Health And Zillow Population Fixed.csv' table='[Agony - Health And Zillow Population Fixed#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Year' ordinal='0' />
            <column datatype='integer' name='FIPS' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='string' name='County' ordinal='3' />
            <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
            <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
            <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
            <column datatype='real' name='Smoke_Perc' ordinal='7' />
            <column datatype='real' name='Obese_Perc' ordinal='8' />
            <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
            <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
            <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
            <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
            <column datatype='real' name='Some_Association_Rate' ordinal='13' />
            <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
            <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
            <column datatype='integer' name='Population' ordinal='16' />
            <column datatype='real' name='Zillow_Value' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fair_Poor_Health_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fair_Poor_Health_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Fair_Poor_Health_Perc</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phys_Unhealth_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phys_Unhealth_Days]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Phys_Unhealth_Days</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ment_Unhealth_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ment_Unhealth_Days]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Ment_Unhealth_Days</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoke_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoke_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Smoke_Perc</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Obese_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Obese_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Obese_Perc</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phys_Inac_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phys_Inac_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Phys_Inac_Perc</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Excess_Drink_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Excess_Drink_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Excess_Drink_Perc</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_College_Perc_25_44</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Some_College_Perc_25_44]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Some_College_Perc_25_44</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_Association_Per_10K</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Some_Association_Per_10K]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Some_Association_Per_10K</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some_Association_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Some_Association_Rate]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Some_Association_Rate</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Severe_Housing_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Severe_Housing_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Severe_Housing_Perc</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insufficent_Sleep_Perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Insufficent_Sleep_Perc]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Insufficent_Sleep_Perc</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zillow_Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Zillow_Value]</local-name>
            <parent-name>[Agony - Health And Zillow Population Fixed.csv]</parent-name>
            <remote-alias>Zillow_Value</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;' value='Excess Drinking' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;' value='Fair/Poor Health' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;' value='Insufficent Sleep' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;' value='Mentally Unhealthy Days' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;' value='Obesity' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;' value='Physically Inactive' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;' value='Physically Unhealthy Days' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;' value='Population' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;' value='Severe Housing' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;' value='Smokers' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;' value='Social Assoc. Per 10K' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;' value='Social Assoc. Rate' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;' value='Some College Age 25-44' />
          <alias key='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;' value='Zillow Value' />
        </aliases>
      </column>
      <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Excess Drinking' datatype='real' name='[Excess_Drink_Perc]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
      <column caption='Fair/Poor Health' datatype='real' name='[Fair_Poor_Health_Perc]' role='measure' type='quantitative' />
      <column caption='Insufficent Sleep' datatype='real' name='[Insufficent_Sleep_Perc]' role='measure' type='quantitative' />
      <column caption='Mentally Unhealthy Days' datatype='real' name='[Ment_Unhealth_Days]' role='measure' type='quantitative' />
      <column caption='Obesity' datatype='real' name='[Obese_Perc]' role='measure' type='quantitative' />
      <column caption='Physically Inactive' datatype='real' name='[Phys_Inac_Perc]' role='measure' type='quantitative' />
      <column caption='Physically Unhealthy Days' datatype='real' name='[Phys_Unhealth_Days]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column caption='Severe Housing' datatype='real' name='[Severe_Housing_Perc]' role='measure' type='quantitative' />
      <column caption='Smokers' datatype='real' name='[Smoke_Perc]' role='measure' type='quantitative' />
      <column caption='Some Association Per 10K' datatype='integer' name='[Some_Association_Per_10K]' role='measure' type='quantitative' />
      <column caption='Some Association Rate' datatype='real' name='[Some_Association_Rate]' role='measure' type='quantitative' />
      <column caption='Some College Age 25-44' datatype='real' name='[Some_College_Perc_25_44]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Health And Zillow Population Fixed.csv' datatype='table' name='[__tableau_internal_object_id__].[Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF]' role='measure' type='quantitative' />
      <column-instance column='[Excess_Drink_Perc]' derivation='Avg' name='[avg:Excess_Drink_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fair_Poor_Health_Perc]' derivation='Avg' name='[avg:Fair_Poor_Health_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Insufficent_Sleep_Perc]' derivation='Avg' name='[avg:Insufficent_Sleep_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ment_Unhealth_Days]' derivation='Avg' name='[avg:Ment_Unhealth_Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Obese_Perc]' derivation='Avg' name='[avg:Obese_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Phys_Inac_Perc]' derivation='Avg' name='[avg:Phys_Inac_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Phys_Unhealth_Days]' derivation='Avg' name='[avg:Phys_Unhealth_Days:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Severe_Housing_Perc]' derivation='Avg' name='[avg:Severe_Housing_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Smoke_Perc]' derivation='Avg' name='[avg:Smoke_Perc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Some_Association_Per_10K]' derivation='Avg' name='[avg:Some_Association_Per_10K:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Some_Association_Rate]' derivation='Avg' name='[avg:Some_Association_Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Some_College_Perc_25_44]' derivation='Avg' name='[avg:Some_College_Perc_25_44:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Zillow_Value]' derivation='Avg' name='[avg:Zillow_Value:qk]' pivot='key' type='quantitative' />
      <group caption='Action (FIPS)' hidden='true' name='[Action (FIPS)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
        </groupfilter>
      </group>
      <group caption='Action (FIPS,State)' hidden='true' name='[Action (FIPS,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (FIPS)' hidden='true' name='[Tooltip (FIPS)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (FIPS,County,State)' hidden='true' name='[Tooltip (FIPS,County,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (FIPS,State)' hidden='true' name='[Tooltip (FIPS,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Health FIPS,County,State)' hidden='true' name='[Tooltip (Health FIPS,County,State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_426716078655410176]' />
          <groupfilter function='level-members' level='[County]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='FIPS' />
        <field-sort-custom-order field='Calculation_426716079418793993' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='Fair_Poor_Health_Perc' />
        <field-sort-custom-order field='Phys_Unhealth_Days' />
        <field-sort-custom-order field='Ment_Unhealth_Days' />
        <field-sort-custom-order field='Smoke_Perc' />
        <field-sort-custom-order field='Obese_Perc' />
        <field-sort-custom-order field='Phys_Inac_Perc' />
        <field-sort-custom-order field='Excess_Drink_Perc' />
        <field-sort-custom-order field='Some_College_Perc_25_44' />
        <field-sort-custom-order field='Some_Association_Per_10K' />
        <field-sort-custom-order field='Some_Association_Rate' />
        <field-sort-custom-order field='Severe_Housing_Perc' />
        <field-sort-custom-order field='Insufficent_Sleep_Perc' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Zillow_Value' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Health And Zillow Population Fixed.csv' id='Agony - Health And Zillow Population Fixed.csv_CD76504E6ECA44CB8115566B5E95C1FF'>
            <properties context=''>
              <relation connection='textscan.0grs3cc07ouixk1ex4ym50vbz7vg' name='Agony - Health And Zillow Population Fixed.csv' table='[Agony - Health And Zillow Population Fixed#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Year' ordinal='0' />
                  <column datatype='integer' name='FIPS' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='string' name='County' ordinal='3' />
                  <column datatype='real' name='Fair_Poor_Health_Perc' ordinal='4' />
                  <column datatype='real' name='Phys_Unhealth_Days' ordinal='5' />
                  <column datatype='real' name='Ment_Unhealth_Days' ordinal='6' />
                  <column datatype='real' name='Smoke_Perc' ordinal='7' />
                  <column datatype='real' name='Obese_Perc' ordinal='8' />
                  <column datatype='real' name='Phys_Inac_Perc' ordinal='9' />
                  <column datatype='real' name='Excess_Drink_Perc' ordinal='10' />
                  <column datatype='real' name='Some_College_Perc_25_44' ordinal='11' />
                  <column datatype='integer' name='Some_Association_Per_10K' ordinal='12' />
                  <column datatype='real' name='Some_Association_Rate' ordinal='13' />
                  <column datatype='real' name='Severe_Housing_Perc' ordinal='14' />
                  <column datatype='real' name='Insufficent_Sleep_Perc' ordinal='15' />
                  <column datatype='integer' name='Population' ordinal='16' />
                  <column datatype='real' name='Zillow_Value' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
      <column caption='KMeans FIPS' datatype='string' name='[Calculation_1001487982148100096]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
      </column>
      <column-instance column='[Calculation_1001487982148100096]' derivation='None' name='[none:Calculation_1001487982148100096:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
      <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
      </column>
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_426716079418793993]' derivation='None' name='[none:Calculation_426716079418793993:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1m18pbv0zka7eq1bh405x19kifr4'>
      <column caption='Origin FIPS' datatype='string' name='[Calculation_426716079420530698]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y1fips]),5)' />
      </column>
      <column caption='IRS Year' datatype='string' name='[Calculation_426716079425789964]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [year] = &apos;16-17&apos; THEN &apos;2017&apos;&#13;&#10;ELSEIF [year] = &apos;17-18&apos; THEN &apos;2018&apos;&#13;&#10;ELSEIF [year] = &apos;18-19&apos; THEN &apos;2019&apos;&#13;&#10;ELSEIF [year] = &apos;19-20&apos; THEN &apos;2020&apos;&#13;&#10;ELSEIF [year] = &apos;20-21&apos; THEN &apos;2021&apos;&#13;&#10;END' />
      </column>
      <column-instance column='[Calculation_426716079420530698]' derivation='None' name='[none:Calculation_426716079420530698:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_426716079425789964]' derivation='None' name='[none:Calculation_426716079425789964:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1kxvxkk07dewdb13304jc1vy8uzz' target='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
      <column-mapping>
        <map key='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]' value='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[none:Calculation_1001487982148100096:nk]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='federated.1kxvxkk07dewdb13304jc1vy8uzz' target='federated.1m18pbv0zka7eq1bh405x19kifr4'>
      <column-mapping>
        <map key='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]' value='[federated.1m18pbv0zka7eq1bh405x19kifr4].[none:Calculation_426716079420530698:nk]' />
        <map key='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' value='[federated.1m18pbv0zka7eq1bh405x19kifr4].[none:Calculation_426716079425789964:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
      <datasources>
        <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
      </datasources>
      <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Year]' role='dimension' type='nominal' />
        <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
        <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
        <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]'>
        <groupfilter function='level-members' level='[attr:County:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]' included-values='all' />
      <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]'>
        <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]'>
        <groupfilter function='member' level='[none:Year:nk]' member='&quot;2017&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        <target field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1_EB511D712EFE4F78B3F390D941DC26E4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet'>
        <exclude-sheet name='Base Detail' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Base Detail,Base' />
        <param name='field-captions' value='ATTR(Cluster)' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Base to Drilldown' name='[Action2_75B6BA1895F3457696E3BB845F18EF4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Base' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Base,Kmeans DrillDown,Kmeans' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Kmeans to Kmeans' name='[Action3_24EBFA125B734291B4022546FABFB5AE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Kmeans' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Base Detail,Base,Kmeans' />
        <param name='on-empty' value='none' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Base'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
            <datasource caption='kmeans_model_data_v1' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:ok]' pivot='key' type='ordinal' />
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
            <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='Attribute' name='[attr:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_426716079418793993]' derivation='None' name='[none:Calculation_426716079418793993:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:cluster:ok]' member='%null%' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='0' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='1' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='2' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='3' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='4' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='5' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='6' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='7' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='8' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='9' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='10' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='11' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='12' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='13' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='14' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='15' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='16' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='17' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='18' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='19' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='20' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='21' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='22' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='23' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='24' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='25' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='26' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='27' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='28' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='29' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='30' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='31' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='32' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='33' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='34' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='35' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='36' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='37' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='38' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='39' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='40' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='41' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='42' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='43' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='44' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='45' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='46' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='47' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='48' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='49' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='50' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='51' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='52' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='53' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='54' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='55' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='56' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='57' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='58' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='59' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='60' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='61' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='62' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='63' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='64' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='65' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='66' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='67' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='68' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='69' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='70' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='71' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='72' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='73' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='74' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='75' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='76' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='77' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='78' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='79' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='80' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='81' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='82' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='83' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='84' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='85' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='86' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='87' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='88' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='89' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='90' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='91' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='92' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='93' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='94' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='95' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='96' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='97' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='98' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='99' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='100' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='101' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='102' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='103' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='104' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='105' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='106' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='107' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='108' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='109' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='110' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='111' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='112' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='113' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='114' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='115' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='116' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='117' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='118' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='119' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='120' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='121' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='122' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='123' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='124' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='125' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='126' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='127' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='128' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='129' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='130' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='131' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='132' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='133' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='134' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='135' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='136' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='137' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='138' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='139' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='140' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='141' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='142' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='143' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='144' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='145' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='146' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='147' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='148' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='149' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='150' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='151' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='152' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='153' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='154' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='155' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='156' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='157' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='158' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='159' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='160' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='161' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='162' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='163' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='164' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='165' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='166' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='167' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='168' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='169' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='170' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='171' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='172' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='173' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='174' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='175' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='176' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='177' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='178' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='179' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='180' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='181' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='182' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='183' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='184' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='185' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='186' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='187' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='188' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='189' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='190' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='191' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='192' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='193' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='194' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='195' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='196' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='197' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='198' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='199' />
              <groupfilter function='member' level='[attr:cluster:ok]' member='%many-values%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</column>
            <column>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]' field-type='quantitative' max='32273698.922760956' min='31761815.527047776' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]' field-type='quantitative' max='5292360.2516669519' min='5106750.4939981159' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]' />
              <tooltip column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]' />
              <tooltip column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]' />
              <tooltip column='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]' />
              <lod column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]' />
              <lod column='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]' />
              <lod column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' />
              <geometry column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cluster:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<Sheet name="Info" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]</rows>
        <cols>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{205C10AE-1990-45C8-A756-97E4110297D3}' />
    </worksheet>
    <worksheet name='Base Detail'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
            <datasource caption='kmeans_model_data_v1' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' />
            <datasource caption='cleaned_countyoutflow' name='federated.1m18pbv0zka7eq1bh405x19kifr4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
            <column caption='KMeans FIPS' datatype='string' name='[Calculation_1001487982148100096]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:qk]' pivot='key' type='quantitative' />
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
            <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Excess Drinking' datatype='real' name='[Excess_Drink_Perc]' role='measure' type='quantitative' />
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column caption='Fair/Poor Health' datatype='real' name='[Fair_Poor_Health_Perc]' role='measure' type='quantitative' />
            <column caption='Insufficent Sleep' datatype='real' name='[Insufficent_Sleep_Perc]' role='measure' type='quantitative' />
            <column caption='Mentally Unhealthy Days' datatype='real' name='[Ment_Unhealth_Days]' role='measure' type='quantitative' />
            <column caption='Obesity' datatype='real' name='[Obese_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Inactive' datatype='real' name='[Phys_Inac_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Unhealthy Days' datatype='real' name='[Phys_Unhealth_Days]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Severe Housing' datatype='real' name='[Severe_Housing_Perc]' role='measure' type='quantitative' />
            <column caption='Smokers' datatype='real' name='[Smoke_Perc]' role='measure' type='quantitative' />
            <column caption='Some Association Per 10K' datatype='integer' name='[Some_Association_Per_10K]' role='measure' type='quantitative' />
            <column caption='Some Association Rate' datatype='real' name='[Some_Association_Rate]' role='measure' type='quantitative' />
            <column caption='Some College Age 25-44' datatype='real' name='[Some_College_Perc_25_44]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Excess_Drink_Perc]' derivation='Avg' name='[avg:Excess_Drink_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fair_Poor_Health_Perc]' derivation='Avg' name='[avg:Fair_Poor_Health_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Insufficent_Sleep_Perc]' derivation='Avg' name='[avg:Insufficent_Sleep_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ment_Unhealth_Days]' derivation='Avg' name='[avg:Ment_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obese_Perc]' derivation='Avg' name='[avg:Obese_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Inac_Perc]' derivation='Avg' name='[avg:Phys_Inac_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Unhealth_Days]' derivation='Avg' name='[avg:Phys_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Severe_Housing_Perc]' derivation='Avg' name='[avg:Severe_Housing_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Smoke_Perc]' derivation='Avg' name='[avg:Smoke_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Per_10K]' derivation='Avg' name='[avg:Some_Association_Per_10K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Rate]' derivation='Avg' name='[avg:Some_Association_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_College_Perc_25_44]' derivation='Avg' name='[avg:Some_College_Perc_25_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Zillow_Value]' derivation='Avg' name='[avg:Zillow_Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1m18pbv0zka7eq1bh405x19kifr4'>
            <column caption='Origin FIPS' datatype='string' name='[Calculation_426716079420530698]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y1fips]),5)' />
            </column>
            <column caption='IRS Year' datatype='string' name='[Calculation_426716079425789964]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [year] = &apos;16-17&apos; THEN &apos;2017&apos;&#13;&#10;ELSEIF [year] = &apos;17-18&apos; THEN &apos;2018&apos;&#13;&#10;ELSEIF [year] = &apos;18-19&apos; THEN &apos;2019&apos;&#13;&#10;ELSEIF [year] = &apos;19-20&apos; THEN &apos;2020&apos;&#13;&#10;ELSEIF [year] = &apos;20-21&apos; THEN &apos;2021&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Y1Fips' datatype='integer' name='[y1fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Action (FIPS,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_75B6BA1895F3457696E3BB845F18EF4A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_426716079418793993]' member='&quot;25017&quot;' />
              <groupfilter function='member' level='[State]' member='&quot;Massachusetts&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]'>
            <groupfilter function='level-members' level='[Calculation_426716079418793993]' user:ui-action-filter='[Action - Health Data]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Action (FIPS,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk] / ([federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:County:nk] / [federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[Calculation_1001487982148100096]</column>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079420530698]</column>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079425789964]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{07B046EF-05A2-402A-AFDE-0D26B244947D}' />
    </worksheet>
    <worksheet name='Info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
            <datasource caption='cleaned_countyoutflow' name='federated.1m18pbv0zka7eq1bh405x19kifr4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
            <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Excess Drinking' datatype='real' name='[Excess_Drink_Perc]' role='measure' type='quantitative' />
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column caption='Fair/Poor Health' datatype='real' name='[Fair_Poor_Health_Perc]' role='measure' type='quantitative' />
            <column caption='Insufficent Sleep' datatype='real' name='[Insufficent_Sleep_Perc]' role='measure' type='quantitative' />
            <column caption='Mentally Unhealthy Days' datatype='real' name='[Ment_Unhealth_Days]' role='measure' type='quantitative' />
            <column caption='Obesity' datatype='real' name='[Obese_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Inactive' datatype='real' name='[Phys_Inac_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Unhealthy Days' datatype='real' name='[Phys_Unhealth_Days]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Severe Housing' datatype='real' name='[Severe_Housing_Perc]' role='measure' type='quantitative' />
            <column caption='Smokers' datatype='real' name='[Smoke_Perc]' role='measure' type='quantitative' />
            <column caption='Some Association Per 10K' datatype='integer' name='[Some_Association_Per_10K]' role='measure' type='quantitative' />
            <column caption='Some Association Rate' datatype='real' name='[Some_Association_Rate]' role='measure' type='quantitative' />
            <column caption='Some College Age 25-44' datatype='real' name='[Some_College_Perc_25_44]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Excess_Drink_Perc]' derivation='Avg' name='[avg:Excess_Drink_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fair_Poor_Health_Perc]' derivation='Avg' name='[avg:Fair_Poor_Health_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Insufficent_Sleep_Perc]' derivation='Avg' name='[avg:Insufficent_Sleep_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ment_Unhealth_Days]' derivation='Avg' name='[avg:Ment_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obese_Perc]' derivation='Avg' name='[avg:Obese_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Inac_Perc]' derivation='Avg' name='[avg:Phys_Inac_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Unhealth_Days]' derivation='Avg' name='[avg:Phys_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Severe_Housing_Perc]' derivation='Avg' name='[avg:Severe_Housing_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Smoke_Perc]' derivation='Avg' name='[avg:Smoke_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Per_10K]' derivation='Avg' name='[avg:Some_Association_Per_10K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Rate]' derivation='Avg' name='[avg:Some_Association_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_College_Perc_25_44]' derivation='Avg' name='[avg:Some_College_Perc_25_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Zillow_Value]' derivation='Avg' name='[avg:Zillow_Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1m18pbv0zka7eq1bh405x19kifr4'>
            <column caption='Origin FIPS' datatype='string' name='[Calculation_426716079420530698]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y1fips]),5)' />
            </column>
            <column caption='IRS Year' datatype='string' name='[Calculation_426716079425789964]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [year] = &apos;16-17&apos; THEN &apos;2017&apos;&#13;&#10;ELSEIF [year] = &apos;17-18&apos; THEN &apos;2018&apos;&#13;&#10;ELSEIF [year] = &apos;18-19&apos; THEN &apos;2019&apos;&#13;&#10;ELSEIF [year] = &apos;19-20&apos; THEN &apos;2020&apos;&#13;&#10;ELSEIF [year] = &apos;20-21&apos; THEN &apos;2021&apos;&#13;&#10;END' />
            </column>
            <column caption='Adjusted Gross Income' datatype='integer' name='[adjusted_gross_income]' role='measure' type='quantitative' />
            <column-instance column='[adjusted_gross_income]' derivation='Sum' name='[sum:adjusted_gross_income:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Y1Fips' datatype='integer' name='[y1fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.1m18pbv0zka7eq1bh405x19kifr4].[sum:adjusted_gross_income:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]'>
            <groupfilter function='level-members' level='[Calculation_426716079418793993]' user:ui-action-filter='[Action - Health Data]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Info]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_426716079418793993]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079420530698]</column>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079425789964]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{96D8CF81-F255-45D3-AD1E-13688621744A}' />
    </worksheet>
    <worksheet name='Kmeans'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
            <datasource caption='kmeans_model_data_v1' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:qk]' pivot='key' type='quantitative' />
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
            <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='Attribute' name='[attr:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_426716079418793993]' derivation='None' name='[none:Calculation_426716079418793993:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]' field-type='quantitative' max='32663873.174859732' min='26054582.177775197' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]' field-type='quantitative' max='6299456.4338868987' min='3687980.4087999747' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]' />
              <lod column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]' />
              <lod column='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]' />
              <tooltip column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]' />
              <tooltip column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]' />
              <geometry column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Cluster:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>County:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<Sheet name="Info" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]</rows>
        <cols>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7A67D76A-5E7D-4F52-B555-86485C823DB6}' />
    </worksheet>
    <worksheet name='Kmeans DrillDown'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
            <datasource caption='kmeans_model_data_v1' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' />
            <datasource caption='cleaned_countyoutflow' name='federated.1m18pbv0zka7eq1bh405x19kifr4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
            <column caption='KMeans FIPS' datatype='string' name='[Calculation_1001487982148100096]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:qk]' pivot='key' type='quantitative' />
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
            <column caption='FIPS' datatype='string' name='[Calculation_426716079418793993]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([FIPS]),5)' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Excess Drinking' datatype='real' name='[Excess_Drink_Perc]' role='measure' type='quantitative' />
            <column caption='Fips' datatype='integer' name='[FIPS]' role='measure' type='quantitative' />
            <column caption='Fair/Poor Health' datatype='real' name='[Fair_Poor_Health_Perc]' role='measure' type='quantitative' />
            <column caption='Insufficent Sleep' datatype='real' name='[Insufficent_Sleep_Perc]' role='measure' type='quantitative' />
            <column caption='Mentally Unhealthy Days' datatype='real' name='[Ment_Unhealth_Days]' role='measure' type='quantitative' />
            <column caption='Obesity' datatype='real' name='[Obese_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Inactive' datatype='real' name='[Phys_Inac_Perc]' role='measure' type='quantitative' />
            <column caption='Physically Unhealthy Days' datatype='real' name='[Phys_Unhealth_Days]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Severe Housing' datatype='real' name='[Severe_Housing_Perc]' role='measure' type='quantitative' />
            <column caption='Smokers' datatype='real' name='[Smoke_Perc]' role='measure' type='quantitative' />
            <column caption='Some Association Per 10K' datatype='integer' name='[Some_Association_Per_10K]' role='measure' type='quantitative' />
            <column caption='Some Association Rate' datatype='real' name='[Some_Association_Rate]' role='measure' type='quantitative' />
            <column caption='Some College Age 25-44' datatype='real' name='[Some_College_Perc_25_44]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Excess_Drink_Perc]' derivation='Avg' name='[avg:Excess_Drink_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fair_Poor_Health_Perc]' derivation='Avg' name='[avg:Fair_Poor_Health_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Insufficent_Sleep_Perc]' derivation='Avg' name='[avg:Insufficent_Sleep_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ment_Unhealth_Days]' derivation='Avg' name='[avg:Ment_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Obese_Perc]' derivation='Avg' name='[avg:Obese_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Inac_Perc]' derivation='Avg' name='[avg:Phys_Inac_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Phys_Unhealth_Days]' derivation='Avg' name='[avg:Phys_Unhealth_Days:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Severe_Housing_Perc]' derivation='Avg' name='[avg:Severe_Housing_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Smoke_Perc]' derivation='Avg' name='[avg:Smoke_Perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Per_10K]' derivation='Avg' name='[avg:Some_Association_Per_10K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_Association_Rate]' derivation='Avg' name='[avg:Some_Association_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Some_College_Perc_25_44]' derivation='Avg' name='[avg:Some_College_Perc_25_44:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Zillow_Value]' derivation='Avg' name='[avg:Zillow_Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1m18pbv0zka7eq1bh405x19kifr4'>
            <column caption='Origin FIPS' datatype='string' name='[Calculation_426716079420530698]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <calculation class='tableau' formula='RIGHT(&quot;00000&quot;+STR([y1fips]),5)' />
            </column>
            <column caption='IRS Year' datatype='string' name='[Calculation_426716079425789964]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [year] = &apos;16-17&apos; THEN &apos;2017&apos;&#13;&#10;ELSEIF [year] = &apos;17-18&apos; THEN &apos;2018&apos;&#13;&#10;ELSEIF [year] = &apos;18-19&apos; THEN &apos;2019&apos;&#13;&#10;ELSEIF [year] = &apos;19-20&apos; THEN &apos;2020&apos;&#13;&#10;ELSEIF [year] = &apos;20-21&apos; THEN &apos;2021&apos;&#13;&#10;END' />
            </column>
            <column aggregation='Sum' caption='Y1Fips' datatype='integer' name='[y1fips]' role='dimension' semantic-role='[County].[Name]' type='ordinal' />
            <column caption='Year' datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Population:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Per_10K:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]&quot;</bucket>
              <bucket>&quot;[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Action (FIPS)]'>
            <groupfilter function='empty-level' member='[Calculation_426716079418793993]' user:ui-action-filter='[Action3_24EBFA125B734291B4022546FABFB5AE]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]'>
            <groupfilter function='level-members' level='[Calculation_426716079418793993]' user:ui-action-filter='[Action - Health Data]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Tooltip (FIPS)]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</column>
            <column>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Action (FIPS)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Fair_Poor_Health_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Excess_Drink_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Smoke_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Severe_Housing_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Insufficent_Sleep_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Ment_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Obese_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Inac_Perc:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Phys_Unhealth_Days:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_Association_Rate:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Some_College_Perc_25_44:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
            <format attr='text-format' field='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[avg:Zillow_Value:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk] / ([federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:County:nk] / [federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]))</rows>
        <cols />
        <join-lod-include-overrides>
          <column>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[Calculation_1001487982148100096]</column>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079420530698]</column>
          <column>[federated.1m18pbv0zka7eq1bh405x19kifr4].[Calculation_426716079425789964]</column>
        </join-lod-include-overrides>
      </table>
      <simple-id uuid='{805BEC81-4DAA-49BF-8857-552B73738B29}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='kmeans_model_data_v1' name='federated.07ctn8z1xwb4xs1fk25af0e8ycx4' />
        <datasource caption='Health And Zillow Population Fixed' name='federated.1kxvxkk07dewdb13304jc1vy8uzz' />
      </datasources>
      <datasource-dependencies datasource='federated.07ctn8z1xwb4xs1fk25af0e8ycx4'>
        <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:ok]' pivot='key' type='ordinal' />
        <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1kxvxkk07dewdb13304jc1vy8uzz'>
        <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
        <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Year]' role='dimension' type='nominal' />
        <column caption='Zillow Value' datatype='real' name='[Zillow_Value]' role='measure' type='quantitative' />
        <column-instance column='[County]' derivation='Attribute' name='[attr:County:nk]' pivot='key' type='nominal' />
        <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
        <column-instance column='[Zillow_Value]' derivation='None' name='[none:Zillow_Value:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1333'>
            <zone h='97334' id='5' type-v2='layout-basic' w='98400' x='800' y='1333'>
              <zone h='38674' id='3' name='Base' show-title='false' w='62400' x='800' y='18000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5834' id='17' param='horz' type-v2='layout-flow' w='98400' x='800' y='1333'>
                <zone h='5834' id='18' type-v2='text' w='98400' x='800' y='1333'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>Team 24: MVR</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='10833' id='22' param='horz' type-v2='layout-flow' w='98400' x='800' y='7167'>
                <zone h='10833' id='10' name='Base' pane-specification-id='0' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]' type-v2='color' w='14057' x='800' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='8' mode='checkdropdown' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' type-v2='filter' values='cascading' w='14057' x='14857' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='21' mode='dropdown' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]' type-v2='filter' values='cascading' w='14057' x='28914' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='9' mode='slider' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' type-v2='filter' w='14057' x='42971' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='19' mode='dropdown' name='Base' param='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]' type-v2='filter' values='database' w='14057' x='57028' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='20' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]' type-v2='filter' values='database' w='14057' x='71085' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10833' id='26' name='Kmeans' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14058' x='85142' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='39821' id='23' name='Base Detail' show-title='false' w='36000' x='63200' y='18000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41993' id='24' name='Kmeans' show-title='false' w='62400' x='800' y='56674'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40846' id='32' name='Kmeans DrillDown' show-title='false' w='36000' x='63200' y='57821'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='33' param='vert' type-v2='layout-flow' w='98400' x='800' y='1333'>
                <zone h='5834' id='18' type-v2='text' w='98400' x='800' y='1333'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='24'>Team 24: MVR</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='8' mode='checkdropdown' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' type-v2='filter' values='cascading' w='14057' x='14857' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='21' mode='dropdown' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]' type-v2='filter' values='cascading' w='14057' x='28914' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='9' mode='slider' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' type-v2='filter' w='14057' x='42971' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='19' mode='dropdown' name='Base' param='[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]' type-v2='filter' values='database' w='14057' x='57028' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='20' name='Base' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]' type-v2='filter' values='database' w='14057' x='71085' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='224' h='38674' id='3' is-fixed='true' name='Base' show-title='false' w='62400' x='800' y='18000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='10' name='Base' pane-specification-id='0' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]' type-v2='color' w='14057' x='800' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='39821' id='23' is-fixed='true' name='Base Detail' show-title='false' w='36000' x='63200' y='18000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10833' id='26' name='Kmeans' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14058' x='85142' y='7167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='41993' id='24' is-fixed='true' name='Kmeans' show-title='false' w='62400' x='800' y='56674'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='237' h='40846' id='32' is-fixed='true' name='Kmeans DrillDown' show-title='false' w='36000' x='63200' y='57821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E5EA547C-9F1B-4D71-BBD1-067A884DEC8F}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Base'>
      <cards>
        <edge name='left'>
          <strip size='237'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' show-all='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]</field>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[sum:cluster:ok]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716078655410176:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:County:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Physically.Unhealthy.Days:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Excessive.Drinking:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Smokers:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Social.Associations:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]</field>
            <field>[federated.1to3jtw0gmqxtq1byim4f0n2a2xe].[none:Calculation_426716078667038728:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E6BA84C-4CEF-4D92-8FFE-4300536BE961}' />
    </window>
    <window class='worksheet' name='Kmeans'>
      <cards>
        <edge name='left'>
          <strip size='189'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' show-all='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]</field>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716078655410176:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:County:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Physically.Unhealthy.Days:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Population:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Excessive.Drinking:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Smokers:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:X..Social.Associations:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Zillow_Value:qk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[usr:Calculation_1001487982173921283:ok]</field>
            <field>[federated.1to3jtw0gmqxtq1byim4f0n2a2xe].[none:Calculation_426716078667038728:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AF90EA8-2BD9-43CB-9D5E-CC640A69B831}' />
    </window>
    <window class='worksheet' name='Info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716078655410176:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18374063-03B0-4AEC-B078-98A00B124864}' />
    </window>
    <window class='worksheet' name='Base Detail'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[none:cluster:ok]</field>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[sum:cluster:ok]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716078655410176:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA8BE4A0-D523-4580-9E0F-A3526E960C28}' />
    </window>
    <window class='worksheet' name='Kmeans DrillDown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[none:cluster:ok]</field>
            <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[sum:cluster:ok]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[:Measure Names]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716078655410176:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</field>
            <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9487F9B7-C99F-4E93-864F-E6B4940F4200}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Base'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:Calculation_426716079418793993:nk]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[none:State:nk]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Geometry (generated)]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Latitude (generated)]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[Longitude (generated)]</field>
                    <field>[federated.07ctn8z1xwb4xs1fk25af0e8ycx4].[attr:cluster:ok]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:County:nk]</field>
                    <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[attr:State:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;25017&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>1585139</value>
                  <value>&quot;POLYGON((-71.8987 42.7114,-71.2942 42.697,-71.256 42.7361,-71.2381 42.6695,-71.2561 42.6567,-71.1353 42.5991,-71.0593 42.6063,-71.0338 42.5855,-71.057 42.5743,-71.0753 42.5309,-71.0412 42.5259,-71.0542 42.477,-71.0253 42.4449,-71.0503 42.3938,-71.0707 42.3896,-71.0693 42.3941,-71.0743 42.3906,-71.0646 42.3695,-71.0674 42.3691,-71.0702 42.3687,-71.0706 42.3682,-71.0714 42.3674,-71.1105 42.3526,-71.1275 42.373,-71.1748 42.3501,-71.157 42.3301,-71.1647 42.3037,-71.1912 42.2827,-71.2304 42.3203,-71.2699 42.328,-71.3295 42.3129,-71.3026 42.2481,-71.3321 42.2487,-71.3438 42.2006,-71.4044 42.1882,-71.4779 42.1567,-71.5024 42.1913,-71.5835 42.195,-71.6028 42.2176,-71.5874 42.2594,-71.5054 42.2732,-71.4866 42.3301,-71.5512 42.3267,-71.5854 42.3112,-71.626 42.3498,-71.5802 42.3872,-71.6039 42.3977,-71.559 42.412,-71.5433 42.4665,-71.5603 42.4745,-71.5314 42.5203,-71.5389 42.5429,-71.62 42.5525,-71.6358 42.5241,-71.6786 42.5303,-71.6646 42.6116,-71.7755 42.6439,-71.8584 42.6337,-71.8578 42.675,-71.8987 42.7114))&quot;</value>
                  <value>42.4472</value>
                  <value>-71.2884</value>
                  <value>84</value>
                  <value>&quot;Middlesex&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.1kxvxkk07dewdb13304jc1vy8uzz].[sum:Population:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Base Detail'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Kmeans'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Kmeans DrillDown'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{DDD2D544-CF46-4F2F-B604-632DF614958B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Base' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Base Detail' width='192'>
      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
      l/0BX7wbV0YuSPL5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Info' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Kmeans' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Kmeans DrillDown' width='192'>
      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
      l/0BX7wbV0YuSPL5AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
